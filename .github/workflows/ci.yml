name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Check formatting with black
        run: |
          black --check backend
      - name: Check imports with isort
        run: |
          isort --check-only --profile black backend

  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: |
          cd frontend
          npm ci || npm install
      - name: Lint with ESLint
        run: |
          cd frontend
          npm run lint

  test-backend:
    runs-on: ubuntu-latest
    needs: lint-backend
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
          pip install pytest pytest-cov
      - name: Run tests
        run: |
          cd backend
          pytest --cov=. --cov-report=xml
        env:
          DATABASE_URL: mongodb://localhost:27017/test_anime_companion
          JWT_SECRET: test_secret_key
          API_KEY_ENCRYPTION_KEY: WNi5HgwMvLTocURg4oErZpvZ8kOUHCu9Bi0slbJbnQw=
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          fail_ci_if_error: false

  build-docker:
    runs-on: ubuntu-latest
    needs: [lint-backend, lint-frontend]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          load: true
          tags: anime-companion-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: false
          load: true
          tags: anime-companion-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max 